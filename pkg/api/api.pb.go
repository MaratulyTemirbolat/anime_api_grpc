// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.1
// source: api.proto

package api

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserAddBlockUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUserId uint32 `protobuf:"varint,1,opt,name=fromUserId,proto3" json:"fromUserId,omitempty"`
	ToUserId   uint32 `protobuf:"varint,2,opt,name=toUserId,proto3" json:"toUserId,omitempty"`
}

func (x *UserAddBlockUserRequest) Reset() {
	*x = UserAddBlockUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAddBlockUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAddBlockUserRequest) ProtoMessage() {}

func (x *UserAddBlockUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAddBlockUserRequest.ProtoReflect.Descriptor instead.
func (*UserAddBlockUserRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

func (x *UserAddBlockUserRequest) GetFromUserId() uint32 {
	if x != nil {
		return x.FromUserId
	}
	return 0
}

func (x *UserAddBlockUserRequest) GetToUserId() uint32 {
	if x != nil {
		return x.ToUserId
	}
	return 0
}

type ViewUserPageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        uint32 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	VisitedUserId uint32 `protobuf:"varint,2,opt,name=visitedUserId,proto3" json:"visitedUserId,omitempty"`
}

func (x *ViewUserPageRequest) Reset() {
	*x = ViewUserPageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewUserPageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewUserPageRequest) ProtoMessage() {}

func (x *ViewUserPageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewUserPageRequest.ProtoReflect.Descriptor instead.
func (*ViewUserPageRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

func (x *ViewUserPageRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ViewUserPageRequest) GetVisitedUserId() uint32 {
	if x != nil {
		return x.VisitedUserId
	}
	return 0
}

type ViewUserPageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    uint32   `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	FirstName string   `protobuf:"bytes,2,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName  string   `protobuf:"bytes,3,opt,name=lastName,proto3" json:"lastName,omitempty"`
	Email     string   `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Username  string   `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	Phones    []string `protobuf:"bytes,6,rep,name=phones,proto3" json:"phones,omitempty"`
	IsBlocked bool     `protobuf:"varint,7,opt,name=is_blocked,json=isBlocked,proto3" json:"is_blocked,omitempty"`
}

func (x *ViewUserPageResponse) Reset() {
	*x = ViewUserPageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewUserPageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewUserPageResponse) ProtoMessage() {}

func (x *ViewUserPageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewUserPageResponse.ProtoReflect.Descriptor instead.
func (*ViewUserPageResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2}
}

func (x *ViewUserPageResponse) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ViewUserPageResponse) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *ViewUserPageResponse) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *ViewUserPageResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ViewUserPageResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ViewUserPageResponse) GetPhones() []string {
	if x != nil {
		return x.Phones
	}
	return nil
}

func (x *ViewUserPageResponse) GetIsBlocked() bool {
	if x != nil {
		return x.IsBlocked
	}
	return false
}

type RemoveAnimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  uint32 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	AnimeId uint32 `protobuf:"varint,2,opt,name=animeId,proto3" json:"animeId,omitempty"`
}

func (x *RemoveAnimeRequest) Reset() {
	*x = RemoveAnimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAnimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAnimeRequest) ProtoMessage() {}

func (x *RemoveAnimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAnimeRequest.ProtoReflect.Descriptor instead.
func (*RemoveAnimeRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3}
}

func (x *RemoveAnimeRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RemoveAnimeRequest) GetAnimeId() uint32 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

type UserAnimeActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   uint32 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	AnimeId  uint32 `protobuf:"varint,2,opt,name=animeId,proto3" json:"animeId,omitempty"`
	ActionId uint32 `protobuf:"varint,3,opt,name=actionId,proto3" json:"actionId,omitempty"`
}

func (x *UserAnimeActionRequest) Reset() {
	*x = UserAnimeActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAnimeActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAnimeActionRequest) ProtoMessage() {}

func (x *UserAnimeActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAnimeActionRequest.ProtoReflect.Descriptor instead.
func (*UserAnimeActionRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{4}
}

func (x *UserAnimeActionRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserAnimeActionRequest) GetAnimeId() uint32 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

func (x *UserAnimeActionRequest) GetActionId() uint32 {
	if x != nil {
		return x.ActionId
	}
	return 0
}

type AnimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Success bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AnimeResponse) Reset() {
	*x = AnimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnimeResponse) ProtoMessage() {}

func (x *AnimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnimeResponse.ProtoReflect.Descriptor instead.
func (*AnimeResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{5}
}

func (x *AnimeResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AnimeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AnimeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ViewAnimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  uint32 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	AnimeId uint32 `protobuf:"varint,2,opt,name=animeId,proto3" json:"animeId,omitempty"`
}

func (x *ViewAnimeRequest) Reset() {
	*x = ViewAnimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewAnimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewAnimeRequest) ProtoMessage() {}

func (x *ViewAnimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewAnimeRequest.ProtoReflect.Descriptor instead.
func (*ViewAnimeRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{6}
}

func (x *ViewAnimeRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ViewAnimeRequest) GetAnimeId() uint32 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

type ViewAnimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimeId     uint32   `protobuf:"varint,1,opt,name=animeId,proto3" json:"animeId,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	ReleaseDate string   `protobuf:"bytes,4,opt,name=releaseDate,proto3" json:"releaseDate,omitempty"`
	AnimeGroup  string   `protobuf:"bytes,5,opt,name=animeGroup,proto3" json:"animeGroup,omitempty"`
	Rating      float64  `protobuf:"fixed64,6,opt,name=rating,proto3" json:"rating,omitempty"`
	ViewsNumber int32    `protobuf:"varint,7,opt,name=viewsNumber,proto3" json:"viewsNumber,omitempty"`
	StudioName  string   `protobuf:"bytes,8,opt,name=studioName,proto3" json:"studioName,omitempty"`
	Genres      []string `protobuf:"bytes,9,rep,name=genres,proto3" json:"genres,omitempty"`
}

func (x *ViewAnimeResponse) Reset() {
	*x = ViewAnimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewAnimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewAnimeResponse) ProtoMessage() {}

func (x *ViewAnimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewAnimeResponse.ProtoReflect.Descriptor instead.
func (*ViewAnimeResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{7}
}

func (x *ViewAnimeResponse) GetAnimeId() uint32 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

func (x *ViewAnimeResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ViewAnimeResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ViewAnimeResponse) GetReleaseDate() string {
	if x != nil {
		return x.ReleaseDate
	}
	return ""
}

func (x *ViewAnimeResponse) GetAnimeGroup() string {
	if x != nil {
		return x.AnimeGroup
	}
	return ""
}

func (x *ViewAnimeResponse) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *ViewAnimeResponse) GetViewsNumber() int32 {
	if x != nil {
		return x.ViewsNumber
	}
	return 0
}

func (x *ViewAnimeResponse) GetStudioName() string {
	if x != nil {
		return x.StudioName
	}
	return ""
}

func (x *ViewAnimeResponse) GetGenres() []string {
	if x != nil {
		return x.Genres
	}
	return nil
}

type EditAnimeCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    uint32 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	CommentId uint32 `protobuf:"varint,2,opt,name=commentId,proto3" json:"commentId,omitempty"`
	Content   string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *EditAnimeCommentRequest) Reset() {
	*x = EditAnimeCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditAnimeCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditAnimeCommentRequest) ProtoMessage() {}

func (x *EditAnimeCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditAnimeCommentRequest.ProtoReflect.Descriptor instead.
func (*EditAnimeCommentRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{8}
}

func (x *EditAnimeCommentRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *EditAnimeCommentRequest) GetCommentId() uint32 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *EditAnimeCommentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ShowAnimeCommentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimeId uint32 `protobuf:"varint,1,opt,name=animeId,proto3" json:"animeId,omitempty"`
}

func (x *ShowAnimeCommentsRequest) Reset() {
	*x = ShowAnimeCommentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowAnimeCommentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowAnimeCommentsRequest) ProtoMessage() {}

func (x *ShowAnimeCommentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowAnimeCommentsRequest.ProtoReflect.Descriptor instead.
func (*ShowAnimeCommentsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{9}
}

func (x *ShowAnimeCommentsRequest) GetAnimeId() uint32 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

type ShowAnimeCommentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimeId          uint32                 `protobuf:"varint,1,opt,name=animeId,proto3" json:"animeId,omitempty"`
	CommentId        uint32                 `protobuf:"varint,2,opt,name=commentId,proto3" json:"commentId,omitempty"`
	Content          string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	RepliedMessageId uint32                 `protobuf:"varint,4,opt,name=repliedMessageId,proto3" json:"repliedMessageId,omitempty"`
	DateTimeCreated  *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=dateTimeCreated,proto3" json:"dateTimeCreated,omitempty"`
}

func (x *ShowAnimeCommentsResponse) Reset() {
	*x = ShowAnimeCommentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowAnimeCommentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowAnimeCommentsResponse) ProtoMessage() {}

func (x *ShowAnimeCommentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowAnimeCommentsResponse.ProtoReflect.Descriptor instead.
func (*ShowAnimeCommentsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{10}
}

func (x *ShowAnimeCommentsResponse) GetAnimeId() uint32 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

func (x *ShowAnimeCommentsResponse) GetCommentId() uint32 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *ShowAnimeCommentsResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ShowAnimeCommentsResponse) GetRepliedMessageId() uint32 {
	if x != nil {
		return x.RepliedMessageId
	}
	return 0
}

func (x *ShowAnimeCommentsResponse) GetDateTimeCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.DateTimeCreated
	}
	return nil
}

type CommentAnimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  uint32 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	AnimeId uint32 `protobuf:"varint,2,opt,name=animeId,proto3" json:"animeId,omitempty"`
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *CommentAnimeRequest) Reset() {
	*x = CommentAnimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentAnimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentAnimeRequest) ProtoMessage() {}

func (x *CommentAnimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentAnimeRequest.ProtoReflect.Descriptor instead.
func (*CommentAnimeRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{11}
}

func (x *CommentAnimeRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CommentAnimeRequest) GetAnimeId() uint32 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

func (x *CommentAnimeRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ReplyUserCommentAnimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           uint32 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	AnimeId          uint32 `protobuf:"varint,2,opt,name=animeId,proto3" json:"animeId,omitempty"`
	Content          string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	RepliedCommentId uint32 `protobuf:"varint,4,opt,name=repliedCommentId,proto3" json:"repliedCommentId,omitempty"`
}

func (x *ReplyUserCommentAnimeRequest) Reset() {
	*x = ReplyUserCommentAnimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyUserCommentAnimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyUserCommentAnimeRequest) ProtoMessage() {}

func (x *ReplyUserCommentAnimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyUserCommentAnimeRequest.ProtoReflect.Descriptor instead.
func (*ReplyUserCommentAnimeRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{12}
}

func (x *ReplyUserCommentAnimeRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ReplyUserCommentAnimeRequest) GetAnimeId() uint32 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

func (x *ReplyUserCommentAnimeRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ReplyUserCommentAnimeRequest) GetRepliedCommentId() uint32 {
	if x != nil {
		return x.RepliedCommentId
	}
	return 0
}

type ActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ActionResponse) Reset() {
	*x = ActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionResponse) ProtoMessage() {}

func (x *ActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionResponse.ProtoReflect.Descriptor instead.
func (*ActionResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{13}
}

func (x *ActionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ActionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_api_proto protoreflect.FileDescriptor

var file_api_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x55, 0x0a, 0x17, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x13, 0x56, 0x69, 0x65, 0x77,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x69, 0x73, 0x69, 0x74,
	0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x76, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xd1, 0x01,
	0x0a, 0x14, 0x56, 0x69, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65,
	0x64, 0x22, 0x46, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x16, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x6e, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x6e,
	0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x57, 0x0a, 0x0d, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x44, 0x0a, 0x10, 0x56, 0x69,
	0x65, 0x77, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x49, 0x64,
	0x22, 0x97, 0x02, 0x0a, 0x11, 0x56, 0x69, 0x65, 0x77, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6e, 0x69, 0x6d,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6e,
	0x69, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x20, 0x0a, 0x0b, 0x76, 0x69, 0x65, 0x77, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x76, 0x69, 0x65, 0x77, 0x73, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x22, 0x69, 0x0a, 0x17, 0x45, 0x64,
	0x69, 0x74, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x34, 0x0a, 0x18, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x6e, 0x69,
	0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x22, 0xdf, 0x01, 0x0a, 0x19,
	0x53, 0x68, 0x6f, 0x77, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6e, 0x69,
	0x6d, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x6e, 0x69, 0x6d,
	0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x61, 0x0a,
	0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x6e, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61,
	0x6e, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x22, 0x96, 0x01, 0x0a, 0x1c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6e, 0x69,
	0x6d, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x6e, 0x69, 0x6d,
	0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a,
	0x10, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x64,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x0e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32,
	0xd0, 0x01, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x3e, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3c, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a,
	0x0c, 0x56, 0x69, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x18, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x69,
	0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x32, 0xc7, 0x01, 0x0a, 0x0c, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x41, 0x6e, 0x69,
	0x6d, 0x65, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x69,
	0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x6e,
	0x69, 0x6d, 0x65, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x41, 0x6e, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3a, 0x0a, 0x09, 0x56, 0x69, 0x65, 0x77, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x12, 0x15, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x41,
	0x6e, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xf4, 0x01, 0x0a,
	0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x52, 0x0a, 0x11, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x41,
	0x6e, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x6e,
	0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6e,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4f, 0x0a, 0x15, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x2e, 0x2e, 0x2f, 0x61, 0x70, 0x69, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_rawDescOnce sync.Once
	file_api_proto_rawDescData = file_api_proto_rawDesc
)

func file_api_proto_rawDescGZIP() []byte {
	file_api_proto_rawDescOnce.Do(func() {
		file_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_rawDescData)
	})
	return file_api_proto_rawDescData
}

var file_api_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_api_proto_goTypes = []interface{}{
	(*UserAddBlockUserRequest)(nil),      // 0: api.UserAddBlockUserRequest
	(*ViewUserPageRequest)(nil),          // 1: api.ViewUserPageRequest
	(*ViewUserPageResponse)(nil),         // 2: api.ViewUserPageResponse
	(*RemoveAnimeRequest)(nil),           // 3: api.RemoveAnimeRequest
	(*UserAnimeActionRequest)(nil),       // 4: api.UserAnimeActionRequest
	(*AnimeResponse)(nil),                // 5: api.AnimeResponse
	(*ViewAnimeRequest)(nil),             // 6: api.ViewAnimeRequest
	(*ViewAnimeResponse)(nil),            // 7: api.ViewAnimeResponse
	(*EditAnimeCommentRequest)(nil),      // 8: api.EditAnimeCommentRequest
	(*ShowAnimeCommentsRequest)(nil),     // 9: api.ShowAnimeCommentsRequest
	(*ShowAnimeCommentsResponse)(nil),    // 10: api.ShowAnimeCommentsResponse
	(*CommentAnimeRequest)(nil),          // 11: api.CommentAnimeRequest
	(*ReplyUserCommentAnimeRequest)(nil), // 12: api.ReplyUserCommentAnimeRequest
	(*ActionResponse)(nil),               // 13: api.ActionResponse
	(*timestamppb.Timestamp)(nil),        // 14: google.protobuf.Timestamp
}
var file_api_proto_depIdxs = []int32{
	14, // 0: api.ShowAnimeCommentsResponse.dateTimeCreated:type_name -> google.protobuf.Timestamp
	0,  // 1: api.UserService.BlockUser:input_type -> api.UserAddBlockUserRequest
	0,  // 2: api.UserService.AddUser:input_type -> api.UserAddBlockUserRequest
	1,  // 3: api.UserService.ViewUserPage:input_type -> api.ViewUserPageRequest
	4,  // 4: api.AnimeService.HandleAnime:input_type -> api.UserAnimeActionRequest
	3,  // 5: api.AnimeService.RemoveAnime:input_type -> api.RemoveAnimeRequest
	6,  // 6: api.AnimeService.ViewAnime:input_type -> api.ViewAnimeRequest
	9,  // 7: api.CommentService.ShowAnimeComments:input_type -> api.ShowAnimeCommentsRequest
	11, // 8: api.CommentService.CommentAnime:input_type -> api.CommentAnimeRequest
	12, // 9: api.CommentService.ReplyUserCommentAnime:input_type -> api.ReplyUserCommentAnimeRequest
	13, // 10: api.UserService.BlockUser:output_type -> api.ActionResponse
	13, // 11: api.UserService.AddUser:output_type -> api.ActionResponse
	2,  // 12: api.UserService.ViewUserPage:output_type -> api.ViewUserPageResponse
	13, // 13: api.AnimeService.HandleAnime:output_type -> api.ActionResponse
	5,  // 14: api.AnimeService.RemoveAnime:output_type -> api.AnimeResponse
	7,  // 15: api.AnimeService.ViewAnime:output_type -> api.ViewAnimeResponse
	10, // 16: api.CommentService.ShowAnimeComments:output_type -> api.ShowAnimeCommentsResponse
	13, // 17: api.CommentService.CommentAnime:output_type -> api.ActionResponse
	13, // 18: api.CommentService.ReplyUserCommentAnime:output_type -> api.ActionResponse
	10, // [10:19] is the sub-list for method output_type
	1,  // [1:10] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_api_proto_init() }
func file_api_proto_init() {
	if File_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAddBlockUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewUserPageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewUserPageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveAnimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAnimeActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewAnimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewAnimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditAnimeCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowAnimeCommentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowAnimeCommentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentAnimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyUserCommentAnimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_api_proto_goTypes,
		DependencyIndexes: file_api_proto_depIdxs,
		MessageInfos:      file_api_proto_msgTypes,
	}.Build()
	File_api_proto = out.File
	file_api_proto_rawDesc = nil
	file_api_proto_goTypes = nil
	file_api_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	BlockUser(ctx context.Context, in *UserAddBlockUserRequest, opts ...grpc.CallOption) (*ActionResponse, error)
	AddUser(ctx context.Context, in *UserAddBlockUserRequest, opts ...grpc.CallOption) (*ActionResponse, error)
	ViewUserPage(ctx context.Context, in *ViewUserPageRequest, opts ...grpc.CallOption) (*ViewUserPageResponse, error)
}

type userServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUserServiceClient(cc grpc.ClientConnInterface) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) BlockUser(ctx context.Context, in *UserAddBlockUserRequest, opts ...grpc.CallOption) (*ActionResponse, error) {
	out := new(ActionResponse)
	err := c.cc.Invoke(ctx, "/api.UserService/BlockUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) AddUser(ctx context.Context, in *UserAddBlockUserRequest, opts ...grpc.CallOption) (*ActionResponse, error) {
	out := new(ActionResponse)
	err := c.cc.Invoke(ctx, "/api.UserService/AddUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ViewUserPage(ctx context.Context, in *ViewUserPageRequest, opts ...grpc.CallOption) (*ViewUserPageResponse, error) {
	out := new(ViewUserPageResponse)
	err := c.cc.Invoke(ctx, "/api.UserService/ViewUserPage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	BlockUser(context.Context, *UserAddBlockUserRequest) (*ActionResponse, error)
	AddUser(context.Context, *UserAddBlockUserRequest) (*ActionResponse, error)
	ViewUserPage(context.Context, *ViewUserPageRequest) (*ViewUserPageResponse, error)
}

// UnimplementedUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserServiceServer struct {
}

func (*UnimplementedUserServiceServer) BlockUser(context.Context, *UserAddBlockUserRequest) (*ActionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BlockUser not implemented")
}
func (*UnimplementedUserServiceServer) AddUser(context.Context, *UserAddBlockUserRequest) (*ActionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUser not implemented")
}
func (*UnimplementedUserServiceServer) ViewUserPage(context.Context, *ViewUserPageRequest) (*ViewUserPageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ViewUserPage not implemented")
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_BlockUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserAddBlockUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).BlockUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UserService/BlockUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).BlockUser(ctx, req.(*UserAddBlockUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_AddUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserAddBlockUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).AddUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UserService/AddUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).AddUser(ctx, req.(*UserAddBlockUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_ViewUserPage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ViewUserPageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).ViewUserPage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UserService/ViewUserPage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).ViewUserPage(ctx, req.(*ViewUserPageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BlockUser",
			Handler:    _UserService_BlockUser_Handler,
		},
		{
			MethodName: "AddUser",
			Handler:    _UserService_AddUser_Handler,
		},
		{
			MethodName: "ViewUserPage",
			Handler:    _UserService_ViewUserPage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

// AnimeServiceClient is the client API for AnimeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AnimeServiceClient interface {
	HandleAnime(ctx context.Context, in *UserAnimeActionRequest, opts ...grpc.CallOption) (*ActionResponse, error)
	RemoveAnime(ctx context.Context, in *RemoveAnimeRequest, opts ...grpc.CallOption) (*AnimeResponse, error)
	ViewAnime(ctx context.Context, in *ViewAnimeRequest, opts ...grpc.CallOption) (*ViewAnimeResponse, error)
}

type animeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAnimeServiceClient(cc grpc.ClientConnInterface) AnimeServiceClient {
	return &animeServiceClient{cc}
}

func (c *animeServiceClient) HandleAnime(ctx context.Context, in *UserAnimeActionRequest, opts ...grpc.CallOption) (*ActionResponse, error) {
	out := new(ActionResponse)
	err := c.cc.Invoke(ctx, "/api.AnimeService/HandleAnime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *animeServiceClient) RemoveAnime(ctx context.Context, in *RemoveAnimeRequest, opts ...grpc.CallOption) (*AnimeResponse, error) {
	out := new(AnimeResponse)
	err := c.cc.Invoke(ctx, "/api.AnimeService/RemoveAnime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *animeServiceClient) ViewAnime(ctx context.Context, in *ViewAnimeRequest, opts ...grpc.CallOption) (*ViewAnimeResponse, error) {
	out := new(ViewAnimeResponse)
	err := c.cc.Invoke(ctx, "/api.AnimeService/ViewAnime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AnimeServiceServer is the server API for AnimeService service.
type AnimeServiceServer interface {
	HandleAnime(context.Context, *UserAnimeActionRequest) (*ActionResponse, error)
	RemoveAnime(context.Context, *RemoveAnimeRequest) (*AnimeResponse, error)
	ViewAnime(context.Context, *ViewAnimeRequest) (*ViewAnimeResponse, error)
}

// UnimplementedAnimeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAnimeServiceServer struct {
}

func (*UnimplementedAnimeServiceServer) HandleAnime(context.Context, *UserAnimeActionRequest) (*ActionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleAnime not implemented")
}
func (*UnimplementedAnimeServiceServer) RemoveAnime(context.Context, *RemoveAnimeRequest) (*AnimeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveAnime not implemented")
}
func (*UnimplementedAnimeServiceServer) ViewAnime(context.Context, *ViewAnimeRequest) (*ViewAnimeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ViewAnime not implemented")
}

func RegisterAnimeServiceServer(s *grpc.Server, srv AnimeServiceServer) {
	s.RegisterService(&_AnimeService_serviceDesc, srv)
}

func _AnimeService_HandleAnime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserAnimeActionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnimeServiceServer).HandleAnime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AnimeService/HandleAnime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnimeServiceServer).HandleAnime(ctx, req.(*UserAnimeActionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnimeService_RemoveAnime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveAnimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnimeServiceServer).RemoveAnime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AnimeService/RemoveAnime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnimeServiceServer).RemoveAnime(ctx, req.(*RemoveAnimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnimeService_ViewAnime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ViewAnimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnimeServiceServer).ViewAnime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AnimeService/ViewAnime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnimeServiceServer).ViewAnime(ctx, req.(*ViewAnimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AnimeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.AnimeService",
	HandlerType: (*AnimeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HandleAnime",
			Handler:    _AnimeService_HandleAnime_Handler,
		},
		{
			MethodName: "RemoveAnime",
			Handler:    _AnimeService_RemoveAnime_Handler,
		},
		{
			MethodName: "ViewAnime",
			Handler:    _AnimeService_ViewAnime_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

// CommentServiceClient is the client API for CommentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CommentServiceClient interface {
	ShowAnimeComments(ctx context.Context, in *ShowAnimeCommentsRequest, opts ...grpc.CallOption) (*ShowAnimeCommentsResponse, error)
	CommentAnime(ctx context.Context, in *CommentAnimeRequest, opts ...grpc.CallOption) (*ActionResponse, error)
	ReplyUserCommentAnime(ctx context.Context, in *ReplyUserCommentAnimeRequest, opts ...grpc.CallOption) (*ActionResponse, error)
}

type commentServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCommentServiceClient(cc grpc.ClientConnInterface) CommentServiceClient {
	return &commentServiceClient{cc}
}

func (c *commentServiceClient) ShowAnimeComments(ctx context.Context, in *ShowAnimeCommentsRequest, opts ...grpc.CallOption) (*ShowAnimeCommentsResponse, error) {
	out := new(ShowAnimeCommentsResponse)
	err := c.cc.Invoke(ctx, "/api.CommentService/ShowAnimeComments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commentServiceClient) CommentAnime(ctx context.Context, in *CommentAnimeRequest, opts ...grpc.CallOption) (*ActionResponse, error) {
	out := new(ActionResponse)
	err := c.cc.Invoke(ctx, "/api.CommentService/CommentAnime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commentServiceClient) ReplyUserCommentAnime(ctx context.Context, in *ReplyUserCommentAnimeRequest, opts ...grpc.CallOption) (*ActionResponse, error) {
	out := new(ActionResponse)
	err := c.cc.Invoke(ctx, "/api.CommentService/ReplyUserCommentAnime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CommentServiceServer is the server API for CommentService service.
type CommentServiceServer interface {
	ShowAnimeComments(context.Context, *ShowAnimeCommentsRequest) (*ShowAnimeCommentsResponse, error)
	CommentAnime(context.Context, *CommentAnimeRequest) (*ActionResponse, error)
	ReplyUserCommentAnime(context.Context, *ReplyUserCommentAnimeRequest) (*ActionResponse, error)
}

// UnimplementedCommentServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCommentServiceServer struct {
}

func (*UnimplementedCommentServiceServer) ShowAnimeComments(context.Context, *ShowAnimeCommentsRequest) (*ShowAnimeCommentsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowAnimeComments not implemented")
}
func (*UnimplementedCommentServiceServer) CommentAnime(context.Context, *CommentAnimeRequest) (*ActionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CommentAnime not implemented")
}
func (*UnimplementedCommentServiceServer) ReplyUserCommentAnime(context.Context, *ReplyUserCommentAnimeRequest) (*ActionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplyUserCommentAnime not implemented")
}

func RegisterCommentServiceServer(s *grpc.Server, srv CommentServiceServer) {
	s.RegisterService(&_CommentService_serviceDesc, srv)
}

func _CommentService_ShowAnimeComments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShowAnimeCommentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommentServiceServer).ShowAnimeComments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.CommentService/ShowAnimeComments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommentServiceServer).ShowAnimeComments(ctx, req.(*ShowAnimeCommentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommentService_CommentAnime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommentAnimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommentServiceServer).CommentAnime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.CommentService/CommentAnime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommentServiceServer).CommentAnime(ctx, req.(*CommentAnimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommentService_ReplyUserCommentAnime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplyUserCommentAnimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommentServiceServer).ReplyUserCommentAnime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.CommentService/ReplyUserCommentAnime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommentServiceServer).ReplyUserCommentAnime(ctx, req.(*ReplyUserCommentAnimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CommentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.CommentService",
	HandlerType: (*CommentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ShowAnimeComments",
			Handler:    _CommentService_ShowAnimeComments_Handler,
		},
		{
			MethodName: "CommentAnime",
			Handler:    _CommentService_CommentAnime_Handler,
		},
		{
			MethodName: "ReplyUserCommentAnime",
			Handler:    _CommentService_ReplyUserCommentAnime_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}
